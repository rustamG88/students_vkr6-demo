import { ref, onMounted } from 'vue'

export function useWebApp() {
  const isWebAppAvailable = ref(false)
  const webApp = ref(null)

  // Check if we're running in Telegram WebApp
  const checkWebApp = () => {
    try {
      console.log('üîç Checking Telegram WebApp availability...')
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º multiple sources –¥–ª—è Telegram WebApp
      const telegramSources = [
        window.Telegram?.WebApp,
        window.TelegramWebviewProxy,
        window.TelegramWebView,
        window.external?.TelegramWebApp
      ].filter(Boolean)
      
      if (telegramSources.length > 0) {
        const webapp = telegramSources[0]
        isWebAppAvailable.value = true
        webApp.value = webapp
        
        console.log('‚úÖ Telegram WebApp SDK found!')
        console.log('WebApp object:', webapp)
        
        // –í—ã–∑—ã–≤–∞–µ–º ready() –∏ expand() –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        if (typeof webapp.ready === 'function') {
          webapp.ready()
          console.log('üì± WebApp.ready() called')
        }
        
        if (typeof webapp.expand === 'function') {
          webapp.expand()
          console.log('üì± WebApp.expand() called')
        }
        
        // –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞
        console.log('üîç TELEGRAM WEBAPP DEBUG INFO:')
        console.log('- Version:', webapp.version || 'unknown')
        console.log('- Platform:', webapp.platform || 'unknown')
        console.log('- ViewportHeight:', webapp.viewportHeight || 'unknown')
        console.log('- IsExpanded:', webapp.isExpanded || false)
        console.log('- Raw initData:', webapp.initData || 'empty')
        console.log('- Parsed initDataUnsafe:', webapp.initDataUnsafe || 'empty')
        
        // –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (webapp.initDataUnsafe && webapp.initDataUnsafe.user) {
          const user = webapp.initDataUnsafe.user
          console.log('üë§ REAL USER DATA FROM TELEGRAM:')
          console.log('- ID:', user.id)
          console.log('- Username:', user.username || 'not provided')
          console.log('- First name:', user.first_name || 'not provided')
          console.log('- Last name:', user.last_name || 'not provided')
          console.log('- Photo URL:', user.photo_url || 'not provided')
          console.log('- Language:', user.language_code || 'not provided')
          console.log('- Is premium:', user.is_premium || false)
        } else {
          console.warn('‚ö†Ô∏è NO USER DATA IN initDataUnsafe')
          console.log('initDataUnsafe structure:', webapp.initDataUnsafe)
        }
        
        return true
      } else {
        console.warn('‚ö†Ô∏è No Telegram WebApp sources found')
        console.log('Available window objects:', Object.keys(window).filter(k => k.toLowerCase().includes('telegram')))
      }
    } catch (error) {
      console.error('‚ùå Error checking Telegram WebApp:', error)
    }
    return false
  }

  // Safe showAlert function - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è Telegram WebApp 6.0
  const showAlert = (message) => {
    try {
      console.log('üì± showAlert called with message:', message)
      
      const webapp = window.Telegram?.WebApp
      if (webapp && typeof webapp.showAlert === 'function') {
        console.log('üì± Using Telegram showAlert (v6.0+)')
        webapp.showAlert(message)
        return
      }
      
      // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π –∏–ª–∏ –µ—Å–ª–∏ showAlert –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      console.log('üì± Telegram showAlert not available, using browser alert')
      alert(message)
    } catch (error) {
      console.warn('showAlert error:', error)
      alert(message) // –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback
    }
  }

  // Safe close function
  const close = () => {
    if (isWebAppAvailable.value && webApp.value?.close) {
      webApp.value.close()
    } else {
      // In browser, just go back or close tab
      if (window.history.length > 1) {
        window.history.back()
      } else {
        window.close()
      }
    }
  }

  // Safe openTelegramLink function
  const openTelegramLink = (url) => {
    if (isWebAppAvailable.value && webApp.value?.openTelegramLink) {
      webApp.value.openTelegramLink(url)
    } else {
      window.open(url, '_blank')
    }
  }

  // Get init data safely - –¢–û–õ–¨–ö–û –î–õ–Ø –í–ê–õ–ò–î–ù–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø
  const getInitData = () => {
    console.log('üì§ getInitData() called...')
    
    // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const validation = isValidTelegramEnvironment()
    if (!validation.isValid) {
      console.error('‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω–æ–µ Telegram –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è getInitData:', validation.error)
      throw new Error(validation.message)
    }
    
    const webapp = window.Telegram.WebApp
    console.log('‚úÖ Real initData found:', webapp.initData)
    return webapp.initData
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ Telegram –¥–∞–Ω–Ω—ã—Ö - –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –§–£–ù–ö–¶–ò–Ø
  const isValidTelegramEnvironment = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram WebApp
    if (!window.Telegram || !window.Telegram.WebApp) {
      console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!')
      console.error('‚ùå window.Telegram:', !!window.Telegram)
      console.error('‚ùå window.Telegram.WebApp:', !!window.Telegram?.WebApp)
      return {
        isValid: false,
        error: 'TELEGRAM_NOT_AVAILABLE',
        message: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ Telegram –∫–ª–∏–µ–Ω—Ç–∞. –û—Ç–∫—Ä–æ–π—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ Telegram.'
      }
    }
    
    const webapp = window.Telegram.WebApp
    console.log('üì± WebApp version:', webapp.version)
    console.log('üì± WebApp platform:', webapp.platform)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ initData
    if (!webapp.initData || webapp.initData.length === 0) {
      console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: initData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!')
      console.error('‚ùå initData present:', !!webapp.initData)
      console.error('‚ùå initData length:', webapp.initData ? webapp.initData.length : 0)
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
      const errorMsg = '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç Telegram. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n\n1. –ó–∞–∫—Ä—ã—Ç—å –∏ –∑–∞–Ω–æ–≤–æ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram\n3. –û–±–Ω–æ–≤–∏—Ç—å Telegram –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏'
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      if (typeof webapp.close === 'function') {
        setTimeout(() => {
          webapp.close()
        }, 3000)
      }
      
      return {
        isValid: false,
        error: 'INIT_DATA_MISSING',
        message: errorMsg
      }
    }
    
    console.log('‚úÖ initData present, length:', webapp.initData.length)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
    let userFound = false
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º initDataUnsafe
    if (webapp.initDataUnsafe && webapp.initDataUnsafe.user && webapp.initDataUnsafe.user.id) {
      console.log('‚úÖ User found in initDataUnsafe:', webapp.initDataUnsafe.user.id)
      userFound = true
    } else {
      console.warn('‚ö†Ô∏è No user in initDataUnsafe, trying manual parsing...')
      
      // –ü—Ä–æ–±—É–µ–º —Ä—É—á–Ω–æ–π –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å
      try {
        const params = new URLSearchParams(webapp.initData)
        const userParam = params.get('user')
        
        if (userParam) {
          const user = JSON.parse(userParam)
          if (user && user.id) {
            console.log('‚úÖ User found via manual parsing:', user.id)
            userFound = true
          } else {
            console.error('‚ùå Parsed user has no ID:', user)
          }
        } else {
          console.error('‚ùå No user parameter in initData')
          console.error('‚ùå Available parameters:', Array.from(params.keys()))
        }
      } catch (error) {
        console.error('‚ùå Manual parsing failed:', error)
      }
    }
    
    if (!userFound) {
      console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!')
      
      const errorMsg = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram. –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –µ—Å–ª–∏:\n\n1. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–µ –∏–∑ Telegram\n2. –£—Å—Ç–∞—Ä–µ–≤—à–∞—è –≤–µ—Ä—Å–∏—è Telegram\n3. –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram –∏ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.'
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      if (typeof webapp.close === 'function') {
        setTimeout(() => {
          webapp.close()
        }, 5000)
      }
      
      return {
        isValid: false,
        error: 'USER_DATA_MISSING',
        message: errorMsg
      }
    }
    
    console.log('‚úÖ Telegram –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–∞–ª–∏–¥–Ω–æ')
    return { isValid: true }
  }

  // Get user data safely from Telegram WebApp - –¢–û–õ–¨–ö–û –î–õ–Ø –í–ê–õ–ò–î–ù–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø
  const getUserData = () => {
    console.log('üîç getUserData() called - checking for Telegram user data...')
    
    // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const validation = isValidTelegramEnvironment()
    if (!validation.isValid) {
      console.error('‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω–æ–µ Telegram –æ–∫—Ä—É–∂–µ–Ω–∏–µ:', validation.error)
      throw new Error(validation.message)
    }
    
    const webapp = window.Telegram.WebApp
    
    // –ï—Å–ª–∏ –º—ã –¥–æ—à–ª–∏ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
    let user = webapp.initDataUnsafe.user
    
    // –ï—Å–ª–∏ initDataUnsafe –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —Ä—É—á–Ω–æ–π –ø–∞—Ä—Å–∏–Ω–≥
    if (!user || !user.id) {
      try {
        const params = new URLSearchParams(webapp.initData)
        const userParam = params.get('user')
        
        if (userParam) {
          user = JSON.parse(userParam)
          console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ —Ä—É—á–Ω–æ–π –ø–∞—Ä—Å–∏–Ω–≥:', user)
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ initData:', error)
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      }
    }
    
    if (!user || !user.id) {
      throw new Error('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã')
    }
    
    console.log('üéâ –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ò–ó TELEGRAM!')
    console.log('Raw user object:', user)
    
    const userData = {
      id: user.id,
      first_name: user.first_name || '',
      last_name: user.last_name || '',
      username: user.username || '',
      language_code: user.language_code || 'ru',
      is_premium: user.is_premium || false,
      photo_url: user.photo_url || null,
      allows_write_to_pm: user.allows_write_to_pm || false
    }
    
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData)
    return userData
  }

  onMounted(() => {
    console.log('üöÄ useWebApp mounted - initializing...')
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp
    setTimeout(() => {
      checkWebApp()
    }, 100)
  })

  return {
    isWebAppAvailable,
    webApp,
    showAlert,
    close,
    openTelegramLink,
    getInitData,
    getUserData,
    checkWebApp,
    isValidTelegramEnvironment
  }
} 